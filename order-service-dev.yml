spring:
  # 配置整个单体应用在eureka服务上的名称
  application:
    name: order-service
  # 配置整个连接数据库连接信息
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.0.101:3306/springcloud_sell?characterEncoding=utf-8&useUnicode=true&useSSL=false
    username: root
    password: 123456
  # 设置spring.data.jpa.show-sql为true,将生成的hql语句打印到控制台上
  jpa:
    show-sql: true
    # 对spring Cloud Stream消息进行分组group,当启动多个实例的时候保证只有一个实例消费消息
  cloud:  
    stream:
      bindings:
        output:
          # 表示要写入消息的消息队列
          destination: decreaseStockTopic
          # content-type向spring cloud stream提供了发送和接收数据的格式
          content-type: application/json
      kafka:
        # stream.bindings.kafka属性告诉spring,将使用kafka作为服务中的消息总线
        binder:
          brokers: 192.168.0.101:9092
          zk-nodes: 192.168.0.101:2181
      # 设置spring cloud stream的默认绑定器为kafka
      default-binder: kafka
  # 设置redis相关信息
  redis:
    host: localhost
    pool: 6379
    database: 0
    timeout: 3000

# 使用feign组件整合hystrix熔断器
feign:
  hystrix:
    enabled: true
# 对hystrix中的方法(指定方法/默认方法)设置超时时间
hystrix:
  command:
    default:
      # 配置hystrix调用服务的超时时间
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000
    # 给特定的方法设置超时时间
    getProductInfoList:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000
# 调整feign中的logging日志的级别为debug
logging:
  level:
    org.springframework.cloud.openfeign: debug
    
server:
  port: 8089
 
# 配置ribbon的负载均衡策略(random随机访问,默认为roundrobin轮询发送).
# product:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

# 去除掉hystrix之前的application前缀(在spring cloud RELEASE正式版中不生效).
# management:
#  server:
#    servlet:
#      context-path: /

## 在整个配置中/{label}-/{name}-{profiles}
## 其中label在git中代表的是分支名 branch, name代表的是文件名 filename(servername), profiles表示的是环境名称
